user  nginx;
worker_processes  1;
error_log  /logs/nginx-error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
    accept_mutex off; # set to 'on' if nginx worker_processes > 1
    use epoll;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    # to boost I/O on HDD we can disable access logs
    access_log off;
    # copies data between one FD and other from within the kernel
    # faster than read() + write()
    sendfile on;
    # send headers in one piece, it is better than sending them one by one
    tcp_nopush on;
    # don't buffer data sent, good for small data bursts in real time
    tcp_nodelay on;
    # allow the server to close connection on non responding client, this will free up memory
    reset_timedout_connection on;
    # request timed out -- default 60
    client_body_timeout 10;
    # if client stop responding, free up memory -- default 60
    send_timeout 2;
    # server will close connection after this time -- default 75
    keepalive_timeout 300;
    # number of requests client can make over keep-alive -- for testing environment
    keepalive_requests 100000;
    proxy_connect_timeout 300s;
    proxy_read_timeout 300s;
    include /etc/nginx/conf.d/*.conf;
    # pass source IP to services
    real_ip_header X-Forwarded-For;
    set_real_ip_from 0.0.0.0/0;
}